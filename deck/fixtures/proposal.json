[
{
    "pk": 1,
    "model": "deck.proposal",
    "fields": {
        "description": "The <strong>Generate XML documentation</strong> file property determines whether an XML file will be generated during compilation. You set this property on the Compile page (for Visual Basic) or Build page (for Visual C#) of the Project Designer. When this option is selected, XML documentation is automatically emitted into an XML file, which will have the same name as your project and the .xml extension.",
        "author": [
            "admin"
        ],
        "created_at": "2014-06-09T06:12:04.700Z",
        "title": "Generating code documentation in Python",
        "slug": "generating-code-documentation-in-python",
        "event": 1
    }
},
{
    "pk": 2,
    "model": "deck.proposal",
    "fields": {
        "description": "Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions. And before you ask: It's BSD licensed!",
        "author": [
            "admin"
        ],
        "created_at": "2014-06-09T06:14:35.629Z",
        "title": "Flask is Fun",
        "slug": "flask-is-fun",
        "event": 1
    }
},
{
    "pk": 3,
    "model": "deck.proposal",
    "fields": {
        "description": "Django's generic class-based view implementation is unneccesarily complicated.\r\nDjango vanilla views gives you <strong>exactly the same functionality</strong>, in a vastly simplified, easier-to-use package, including:\r\n* No mixin classes.\r\n* No calls to super().\r\n* A sane class hierarchy.\r\n* A stripped down API.\r\n* Simpler method implementations, with less magical behavior.\r\n",
        "author": [
            "admin"
        ],
        "created_at": "2014-06-09T06:16:00.504Z",
        "title": "Django Vanilla Views",
        "slug": "django-vanilla-views",
        "event": 1
    }
}
]
